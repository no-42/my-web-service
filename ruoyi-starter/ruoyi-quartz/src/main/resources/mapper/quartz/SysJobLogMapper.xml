<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.quartz.mapper.SysJobLogMapper">

    <resultMap type="com.ruoyi.quartz.domain.entity.SysJobLogEntity" id="SysJobLogResult">
        <id property="id" column="id"/>
        <result property="jobName" column="job_name"/>
        <result property="jobGroup" column="job_group"/>
        <result property="invokeTarget" column="invoke_target"/>
        <result property="message" column="message"/>
        <result property="status" column="status"/>
        <result property="exceptionInfo" column="exception_info"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <sql id="selectJobLogVo">
        select id,
               job_name,
               job_group,
               invoke_target,
               "message",
               status,
               exception_info,
               create_time
        from "system".sys_job_log
    </sql>

    <select id="selectJobLogList" parameterType="com.ruoyi.quartz.domain.query.SysJobLogQuery"
            resultMap="SysJobLogResult">
        <include refid="selectJobLogVo"/>
        <where>
            <if test="jobName != null and jobName != ''">
                AND job_name like concat('%', #{jobName}, '%')
            </if>
            <if test="jobGroup != null and jobGroup != ''">
                AND job_group = #{jobGroup}
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
            <if test="invokeTarget != null and invokeTarget != ''">
                AND invoke_target like concat('%', #{invokeTarget}, '%')
            </if>
            <if test="createTimeBegin != null and createTimeBegin != ''">
                and create_time &gt;= #{createTimeBegin}
            </if>
            <if test="createTimeEnd != null and createTimeEnd != ''">
                and create_time &lt;= #{createTimeEnd}
            </if>
        </where>
    </select>

    <select id="selectJobLogAll" resultMap="SysJobLogResult">
        <include refid="selectJobLogVo"/>
    </select>

    <select id="selectJobLogById" parameterType="String" resultMap="SysJobLogResult">
        <include refid="selectJobLogVo"/>
        where id = #{id}::uuid
    </select>

    <delete id="deleteJobLogById" parameterType="String">
        delete
        from "system".sys_job_log
        where id = #{id}
    </delete>

    <delete id="deleteJobLogByIds" parameterType="String">
        delete from "system".sys_job_log where id in
        <foreach collection="logIds" item="jobLogId" open="(" separator="," close=")">
            #{jobLogId}
        </foreach>
    </delete>

    <update id="cleanJobLog">
        truncate table "system".sys_job_log
    </update>

    <insert id="insertJobLog" parameterType="com.ruoyi.quartz.domain.entity.SysJobLogEntity">
        insert into "system".sys_job_log(
        <if test="id != null and id != ''">id,</if>
        <if test="jobName != null and jobName != ''">job_name,</if>
        <if test="jobGroup != null and jobGroup != ''">job_group,</if>
        <if test="invokeTarget != null and invokeTarget != ''">invoke_target,</if>
        <if test="message != null and message != ''">message,</if>
        <if test="status != null and status != ''">status,</if>
        <if test="exceptionInfo != null and exceptionInfo != ''">exception_info,</if>
        create_time
        )values(
        <if test="id != null and id != ''">#{id}::uuid,</if>
        <if test="jobName != null and jobName != ''">#{jobName},</if>
        <if test="jobGroup != null and jobGroup != ''">#{jobGroup},</if>
        <if test="invokeTarget != null and invokeTarget != ''">#{invokeTarget},</if>
        <if test="message != null and message != ''">#{message},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="exceptionInfo != null and exceptionInfo != ''">#{exceptionInfo},</if>
        now()
        )
    </insert>

</mapper> 