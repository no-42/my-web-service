<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysDeptMapper">

    <resultMap type="com.ruoyi.common.core.entity.SysDeptEntity" id="SysDeptResult">
        <id property="id" column="id"/>
        <result property="parentId" column="parent_id"/>
        <result property="ancestors" column="ancestors"/>
        <result property="name" column="name"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="phone" column="phone"/>
        <result property="email" column="email"/>
        <result property="enable" column="enable"/>
        <result property="delFlag" column="del_flag"/>
        <result property="parentName" column="parent_name"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectDeptVo">
        select d.id,
               d.parent_id,
               d.ancestors,
               d.name,
               d.order_num,
               d.leader,
               d.phone,
               d.email,
               d.enable,
               d.del_flag,
               d.create_by,
               d.create_time
        from "system".sys_dept d
    </sql>

    <select id="selectDeptList" parameterType="com.ruoyi.system.domain.query.SysDeptQuery"
            resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where d.del_flag = false
        <if test="id != null and id != ''">
            AND id = #{id}
        </if>
        <if test="parentId != null and parentId != ''">
            AND d.parent_id = #{parentId}
        </if>
        <if test="name != null and name != ''">
            AND d."name" like concat('%', #{name}, '%')
        </if>
        <if test="enable != null">
            AND d.enable = #{enable}
        </if>
        <!-- 数据范围过滤 -->
        ${params.dataScope}
        order by d.parent_id, d.order_num
    </select>

    <select id="selectDeptListByRoleId" resultType="String">
        select d.id
        from "system".sys_dept d
        left join "system".sys_role_dept rd on d.id = rd.dept_id
        where rd.role_id = #{roleId}::uuid
        <if test="deptCheckStrictly">
            and d.id not in (select d.parent_id from "system".sys_dept d inner join "system".sys_role_dept rd on d.id =
            rd.dept_id and rd.role_id = #{roleId}::uuid and d.parent_id is not null)
        </if>
        order by d.parent_id, d.order_num
    </select>

    <select id="selectDeptById" parameterType="String" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where id = #{id}::uuid
    </select>

    <select id="checkDeptExistUser" parameterType="String" resultType="int">
        select count(1)
        from "system".sys_user
        where id = #{id}::uuid
          and del_flag = false
    </select>

    <select id="hasChildByDeptId" parameterType="String" resultType="int">
        select count(1)
        from "system".sys_dept
        where del_flag = false
          and parent_id = #{deptId} limit 1
    </select>

    <select id="selectChildrenDeptById" parameterType="String" resultMap="SysDeptResult">
        select *
        from "system".sys_dept
        where #{deptId} = ANY(STRING_TO_ARRAY(ancestors, ','))
    </select>

    <select id="selectNormalChildrenDeptById" parameterType="String" resultType="int">
        select count(*)
        from "system".sys_dept
        where enable = true
          and del_flag = false
          and #{deptId} = ANY(STRING_TO_ARRAY(ancestors, ','))
    </select>

    <select id="checkDeptNameUnique" resultMap="SysDeptResult">
        <include refid="selectDeptVo"/>
        where "name"=#{name} and parent_id = #{parentId}::uuid and del_flag = false limit 1
    </select>

    <insert id="insertDept" parameterType="com.ruoyi.common.core.entity.SysDeptEntity" useGeneratedKeys="true"
            keyProperty="id">
        insert into "system".sys_dept(
        <if test="parentId != null and parentId != ''">parent_id,</if>
        <if test="name != null and name != ''">name,</if>
        <if test="ancestors != null and ancestors != ''">ancestors,</if>
        <if test="orderNum != null">order_num,</if>
        <if test="leader != null and leader != ''">leader,</if>
        <if test="phone != null and phone != ''">phone,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="enable != null">enable,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        )values(
        <if test="parentId != null and parentId != ''">#{parentId}::uuid,</if>
        <if test="name != null and name != ''">#{name},</if>
        <if test="ancestors != null and ancestors != ''">#{ancestors},</if>
        <if test="orderNum != null">#{orderNum},</if>
        <if test="leader != null and leader != ''">#{leader},</if>
        <if test="phone != null and phone != ''">#{phone},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="enable != null">#{enable},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        now()
        )
    </insert>

    <update id="updateDept" parameterType="com.ruoyi.common.core.entity.SysDeptEntity">
        update "system".sys_dept
        <set>
            <if test="parentId != null and parentId != ''">parent_id = #{parentId}::uuid,</if>
            <if test="name != null and name != ''">"name" = #{name},</if>
            <if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
            <if test="orderNum != null">order_num = #{orderNum},</if>
            <if test="leader != null">leader = #{leader},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="email != null">email = #{email},</if>
            <if test="enable != null">enable = #{enable},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = now()
        </set>
        where id = #{id}::uuid
    </update>

    <update id="updateDeptChildren" parameterType="java.util.List">
        update "system".sys_dept set ancestors =
        <foreach collection="depts" item="item" index="index"
                 separator=" " open="case id" close="end">
            when #{id}::uuid then #{item.ancestors}
        </foreach>
        where id in
        <foreach collection="depts" item="item" index="index"
                 separator="," open="(" close=")">
            #{item.id}::uuid
        </foreach>
    </update>

    <update id="updateDeptStatusNormal" parameterType="String">
        update "system".sys_dept set enable = true where id in
        <foreach collection="array" item="deptId" open="(" separator="," close=")">
            #{deptId}::uuid
        </foreach>
    </update>

    <delete id="deleteDeptById" parameterType="String">
        update "system".sys_dept
        set del_flag = true
        where id = #{deptId}::uuid
    </delete>

</mapper> 